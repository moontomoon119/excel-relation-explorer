{"version":3,"file":"287.bundle.js","mappings":"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","sources":["webpack://excel-relations-front/./src/utils/uiUtils.js"],"sourcesContent":["/**\n * UI 관련 유틸리티 함수\n */\n\n/**\n * 결과 영역에 필터링 결과를 표시합니다.\n * @param {Array} results 필터 결과 목록\n * @param {Array} pnuList 교집합 PNU 목록\n * @param {number} pnuCount 교집합 PNU 개수\n * @param {HTMLElement} resultArea 결과를 표시할 DOM 요소\n */\nexport function displayResults(results, pnuList, pnuCount, resultArea) {\n  if (!results || results.length === 0 || !pnuList || pnuList.length === 0) {\n    resultArea.innerHTML = '<p class=\"alert alert-warning\">필터링된 결과가 없습니다.</p>';\n    return;\n  }\n  \n  // 결과 정보 표시\n  let html = `\n    <div class=\"mb-3\">\n      <p><strong>필터링 결과:</strong></p>\n      <ul>\n        <li>적용된 필터 수: ${results.length}</li>\n        <li>최종 PNU 개수: ${pnuCount}</li>\n      </ul>\n    </div>\n    \n    <div class=\"accordion mb-3\" id=\"filterAccordion\">\n  `;\n  \n  // 각 필터 정보 아코디언으로 표시\n  results.forEach((data, index) => {\n    html += `\n      <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"filter-heading-${index}\">\n          <button class=\"accordion-button ${index > 0 ? 'collapsed' : ''}\" type=\"button\" data-bs-toggle=\"collapse\" \n                  data-bs-target=\"#filter-collapse-${index}\" aria-expanded=\"${index === 0 ? 'true' : 'false'}\" \n                  aria-controls=\"filter-collapse-${index}\">\n            필터 ${index + 1}: ${data.table_name}.${data.column_name} (${data.pnu_count}개)\n          </button>\n        </h2>\n        <div id=\"filter-collapse-${index}\" class=\"accordion-collapse collapse ${index === 0 ? 'show' : ''}\" \n             aria-labelledby=\"filter-heading-${index}\" data-bs-parent=\"#filterAccordion\">\n          <div class=\"accordion-body\">\n            <ul>\n              <li>테이블/컬럼: ${data.table_name}.${data.column_name}</li>\n    `;\n    \n    if (data.min_value !== undefined) {\n      // 숫자형 필터링 결과\n      html += `\n              <li>전체 범위: ${data.min_value} ~ ${data.max_value}</li>\n              <li>필터 범위: ${data.filter_min} ~ ${data.filter_max}</li>\n      `;\n    } else if (data.selected_values) {\n      // 글자형 필터링 결과\n      html += `\n              <li>선택된 값: ${data.selected_values.join(', ')}</li>\n      `;\n    }\n    \n    html += `\n              <li>필터링된 PNU 개수: ${data.pnu_count}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    `;\n  });\n  \n  html += `\n    </div>\n    \n    <div class=\"table-responsive\">\n      <table class=\"result-table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>PNU</th>\n          </tr>\n        </thead>\n        <tbody>\n  `;\n  \n  // 최대 100개까지만 표시\n  const maxDisplay = Math.min(pnuList.length, 100);\n  \n  for (let i = 0; i < maxDisplay; i++) {\n    html += `\n      <tr>\n        <td>${i + 1}</td>\n        <td>${pnuList[i]}</td>\n      </tr>\n    `;\n  }\n  \n  html += `\n        </tbody>\n      </table>\n    </div>\n  `;\n  \n  if (pnuList.length > maxDisplay) {\n    html += `<p class=\"text-muted\">총 ${pnuList.length}개 중 ${maxDisplay}개만 표시됨</p>`;\n  }\n  \n  resultArea.innerHTML = html;\n  \n  // Bootstrap의 아코디언 스크립트 추가 (필요한 경우)\n  ensureBootstrapScriptLoaded();\n}\n\n/**\n * 테이블 선택 드롭다운을 채웁니다.\n * @param {Array<string>} tables 테이블 목록\n * @param {HTMLSelectElement} selectElement <select> 요소\n */\nexport function populateTableSelect(tables, selectElement) {\n  selectElement.innerHTML = '<option value=\"\">테이블 선택...</option>';\n  \n  tables.forEach(table => {\n    const option = document.createElement('option');\n    option.value = table;\n    option.textContent = table;\n    selectElement.appendChild(option);\n  });\n}\n\n/**\n * 컬럼 선택 드롭다운을 채웁니다.\n * @param {Object} tableData 테이블 컬럼 데이터 { numeric: [], text: [] }\n * @param {HTMLSelectElement} selectElement <select> 요소\n */\nexport function populateColumnSelect(tableData, selectElement) {\n  selectElement.innerHTML = '<option value=\"\">컬럼 선택...</option>';\n  \n  // 숫자형 컬럼 추가\n  if (tableData.numeric && tableData.numeric.length > 0) {\n    const numericGroup = document.createElement('optgroup');\n    numericGroup.label = '숫자형';\n    \n    tableData.numeric.forEach(col => {\n      const option = document.createElement('option');\n      option.value = col.column_name;\n      option.textContent = `${col.column_name} (${col.data_type})`;\n      option.dataset.type = 'numeric';\n      numericGroup.appendChild(option);\n    });\n    \n    selectElement.appendChild(numericGroup);\n  }\n  \n  // 글자형 컬럼 추가\n  if (tableData.text && tableData.text.length > 0) {\n    const textGroup = document.createElement('optgroup');\n    textGroup.label = '글자형';\n    \n    tableData.text.forEach(col => {\n      const option = document.createElement('option');\n      option.value = col.column_name;\n      option.textContent = `${col.column_name} (${col.data_type})`;\n      option.dataset.type = 'text';\n      textGroup.appendChild(option);\n    });\n    \n    selectElement.appendChild(textGroup);\n  }\n}\n\n/**\n * 고유값 목록을 표시합니다.\n * @param {Array} valueStats 고유값 통계 데이터\n * @param {HTMLElement} valueListElement 값 목록을 표시할 DOM 요소\n * @param {number} filterId 필터 ID\n */\nexport function displayTextValues(valueStats, valueListElement, filterId) {\n  valueListElement.innerHTML = '';\n  \n  if (!valueStats || valueStats.length === 0) {\n    valueListElement.innerHTML = '<p class=\"text-muted\">데이터가 없습니다.</p>';\n    return;\n  }\n  \n  valueStats.forEach(stat => {\n    const div = document.createElement('div');\n    div.className = 'form-check';\n    \n    const input = document.createElement('input');\n    input.type = 'checkbox';\n    input.className = 'form-check-input value-checkbox';\n    input.value = stat.value;\n    input.id = `value-${filterId}-${stat.value}`;\n    input.dataset.value = stat.value;\n    \n    const label = document.createElement('label');\n    label.className = 'form-check-label';\n    label.htmlFor = `value-${filterId}-${stat.value}`;\n    label.textContent = `${stat.value} (${stat.frequency})`;\n    \n    div.appendChild(input);\n    div.appendChild(label);\n    valueListElement.appendChild(div);\n  });\n}\n\n/**\n * 숫자형 컬럼 정보를 표시합니다.\n * @param {Object} columnInfo 컬럼 정보\n * @param {HTMLElement} infoElement 정보를 표시할 DOM 요소\n * @param {HTMLInputElement} minValueInput 최소값 입력 요소\n * @param {HTMLInputElement} maxValueInput 최대값 입력 요소\n */\nexport function displayNumericColumnInfo(columnInfo, infoElement, minValueInput, maxValueInput) {\n  if (!columnInfo) {\n    infoElement.textContent = '';\n    return;\n  }\n  \n  infoElement.textContent = `범위: ${columnInfo.min_value || 'N/A'} ~ ${columnInfo.max_value || 'N/A'}, 평균: ${columnInfo.avg_value ? columnInfo.avg_value.toFixed(2) : 'N/A'}`;\n  \n  // 기본값 설정\n  minValueInput.value = columnInfo.min_value || '';\n  maxValueInput.value = columnInfo.max_value || '';\n}\n\n/**\n * 필터 제목을 업데이트합니다.\n * @param {Object} filter 필터 객체\n * @param {HTMLElement} nameElement 필터 이름 요소\n * @param {HTMLElement} typeElement 필터 타입 요소\n */\nexport function updateFilterTitle(filter, nameElement, typeElement) {\n  if (filter.tableName && filter.columnName) {\n    nameElement.textContent = `${filter.tableName}.${filter.columnName}`;\n    \n    if (filter.columnType === 'numeric') {\n      typeElement.textContent = '숫자형';\n      typeElement.className = 'badge bg-primary filter-type';\n    } else if (filter.columnType === 'text') {\n      typeElement.textContent = '글자형';\n      typeElement.className = 'badge bg-success filter-type';\n    }\n  } else if (filter.tableName) {\n    nameElement.textContent = filter.tableName;\n    typeElement.textContent = '';\n  } else {\n    nameElement.textContent = '새 필터';\n    typeElement.textContent = '';\n  }\n}\n\n/**\n * Bootstrap 스크립트가 로드되었는지 확인하고, 없으면 로드합니다.\n */\nfunction ensureBootstrapScriptLoaded() {\n  if (!document.querySelector('script[src*=\"bootstrap.bundle.min.js\"]')) {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js';\n    document.body.appendChild(scriptTag);\n  }\n} "],"names":["displayResults","results","pnuList","pnuCount","resultArea","length","html","concat","forEach","data","index","table_name","column_name","pnu_count","undefined","min_value","max_value","filter_min","filter_max","selected_values","join","maxDisplay","Math","min","i","innerHTML","document","querySelector","scriptTag","createElement","src","body","appendChild","ensureBootstrapScriptLoaded","populateTableSelect","tables","selectElement","table","option","value","textContent","populateColumnSelect","tableData","numeric","numericGroup","label","col","data_type","dataset","type","text","textGroup","displayTextValues","valueStats","valueListElement","filterId","stat","div","className","input","id","htmlFor","frequency","displayNumericColumnInfo","columnInfo","infoElement","minValueInput","maxValueInput","avg_value","toFixed","updateFilterTitle","filter","nameElement","typeElement","tableName","columnName","columnType"],"sourceRoot":""}